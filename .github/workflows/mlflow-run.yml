name: Train Deep Learning Model

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  train-model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r MLProject/requirements.txt || true
          pip install mlflow tensorflow scikit-learn pandas

      # - name: Run training script
      #   run: |
      #     cd MLProject
      #     python modelling.py \
      #       --epochs 10 \
      #       --batch_size 32 \
      #       --learning_rate 0.001 \
      #       --n_hidden 2 \
      #       --n_units 64 \
      #       --dropout_rate 0.3

      # - name: Run mlflow project
      #   run: |
      #     mlflow run MLProject --env-manager=local

      - name: Run mlflow project
        id: run_mlflow
        run: |
          echo "Running MLflow project..."
          mlflow_output=$(mlflow run MLProject --env-manager=local -P epochs=10 -P batch_size=32 -P learning_rate=0.001 -P n_hidden=2 -P n_units=64 -P dropout_rate=0.3)

          echo "$mlflow_output"

          # Extract run_id from the MLflow CLI output
          run_id=$(echo "$mlflow_output" | grep -oP "(?<=Run (with )?ID )[a-f0-9]{32}")
          
          if [ -z "$run_id" ]; then
            echo "❌ Failed to extract run_id"
            exit 1
          fi

          echo "✅ MLflow run_id: $run_id"

          # Export run_id as GitHub Actions env var for use in later steps
          echo "MLFLOW_RUN_ID=$run_id" >> $GITHUB_ENV

      
      - name: Get latest MLflow run_id
        run: |
          RUN_ID=$(ls -td mlruns/0/*/ | head -n 1 | cut -d'/' -f3)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest run_id: $RUN_ID"

